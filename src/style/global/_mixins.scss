//## Mixin for generate @font-face css rules.
//## PARAMETERS: font-family, font-weight, font-style, url, local, local
@mixin createFontFaceRule($name, $weight, $style, $path, $local01: '', $local02: '') {
  $_local01: if($local01 != '', 'local("#{$local01}"),', '');
  $_local02: if($local02 != '', 'local(#{$local02}),', '');

  @font-face {
    font-family: $name;
    font-style: $style;
    font-weight: $weight;
    src: url('#{$path}.eot'); //# IE9 Compat Modes
    src:
      #{unquote($_local01)}
      #{unquote($_local02)}
      url('#{$path}.eot?#iefix') format('embedded-opentype'), //# IE6-IE8
      url('#{$path}.woff2') format('woff2'),                  //# Super Modern Browsers
      url('#{$path}.woff') format('woff'),                    //# Modern Browsers
      url('#{$path}.ttf') format('truetype'),                 //# Safari, Android, iOS
      url('#{$path}.svg#Nunito') format('svg');               //# Legacy iOS
    @content;
  }
}

//## Mixin for create typography class.
//## PARAMETERS: font-weight, font-style
@mixin createTypographyElement($weight, $style) {
  font-weight: $weight;
  font-style: $style;
  @content;
}

//## Mixin for create font size class.
//## PARAMETERS: font-size, line-height
@mixin createFontSizeElement($fontSize, $lineHeight) {
  font-size: $fontSize;
  line-height: $lineHeight;
  @content;
}
